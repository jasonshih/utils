#!/bin/bash


if [ $# -lt 1 ]; then
   echo "ERROR: missing argument"
   echo "Usage:
                $0 input-bulk-query-csv


        "
   exit 1
elif [ ! -f $1 ]; then
     echo "ERROR: Cant find input bulk query csv file!"
     exit 1
fi


_root=`dirname $0`
_etu_master_ip=""
_root=`cd $_root ; pwd`
_user=''
_pass=''
_login_url='http://$_etu_master_ip:9997/login.jsp'
_url='http://$_etu_master_ip:9997/aptg_sip.jsp'
_cache_f="$_root/headers"
_max_evt=100


_cache () {


   if [ `which curl >/dev/null ; echo $?` != 0 ]; then
      echo "ERROR: cant find curl command!"
      exit 1
   fi


   curl -d "username=$_user&password=$_pass" --dump-header $_cache_f "$_login_url"


}




_qry () {


  # AAA sample data:
  #
  # Accounting Status Type,MSID,IP Address,BSID,Acct-Output-Octets,Acct-Input-Octets,Event TimeF
  # Start,466051184624301 ,10.86.117.174,34C1006435B2,0,0,20130305141347
  # Stop,466051184624301 ,10.86.117.174,34C1006435B2,378493,44404,20130305141931


  # convert sql stmt
  # select * from NAT_LOG where private_source_ip='10.87.253.59' and datetime between '2013-03-05 15:12:56' and '2013-03-05 15:12:57';


  if [ ! -f $_cache_f ]; then
     echo "WARN: missing cache, login APTG query interface now"
     _cache
  fi


  if [ $# -lt 3 ]; then
     echo "Usage:
                $0 Source-IP Start-time Stop-time


        "
  fi
  local _ip=$1
  local _st=$2
  local _et=$3
  #echo curl -d "$_url?sip=$_ip&from=$_st&to=$_et&max=$_max_evt&submit=Query"
  curl -s -d -L -b $_cache_f "$_url?sip=$_ip&from=$_st&to=$_et&max=$_max_evt&submit=Query" | elinks -dump -dump-width 200 | grep -A10000 'DateTime' | grep -B10000 'get result'


}




_iso_time () {


   if [ $# -lt 1 ]; then
      echo "Missing argument!"
      exit 1
   fi
  
   # convert time frame 2013 03 05 142122 into iso like fmt
   yyyy=`echo $1 | cut -c1-4`
   mm=`echo $1 | cut -c5-6`
   dd=`echo $1 | cut -c7-8`
   hh=`echo $1 | cut -c9-10`
   MM=`echo $1 | cut -c11-12`
   ss=`echo $1 | cut -c13-14`
   echo "$yyyy-$mm-$dd+$hh%3A$MM%3A$ss"
}




 tf=`mktemp /tmp/XXXXXX`
 grep -v ^Accounting $1 | grep ^Start, > $tf.st
 grep -v ^Accounting $1 | grep ^Stop,  > $tf.et
 #paste $tf.st $tf.et | awk '{print NR","$0}' > $tf


 # merge evt:
 # Start,466051184624301 ,10.86.117.174,34C1006435B2,0,0,20130305141347 ,Stop,466051184624301 ,10.86.117.174,34C1006435B2,378493,44404,20130305141931
 # Start,466051184624301 ,10.86.31.5,34C1006435B2,0,0,20130305142122 ,Stop,466051184624301 ,10.86.31.5,34C1006435B2,833,186,20130305142130
 paste $tf.st $tf.et | sed -e 's/\t/,/g' >  $tf




 cat $tf | \
        while read ln;
        do
           _ip=`echo $ln | awk -F',' '{print $3}'`
           _st=`echo $ln | awk -F',' '{print $7}'`
           _et=`echo $ln | awk -F',' '{print $(NF)}'`
           echo "INFO: perform query for source IP addr: $_ip, start time = $_st and stop time = $_et"
           _st=`_iso_time $_st`
           _et=`_iso_time $_et`
           _qry $_ip $_st $_et
        done


# cleanup
rm -f $tf $tf.st $tf.et
# end

