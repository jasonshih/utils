info() {

    echo -e "`date +%c` - INFO: $* \n"
}

warn() {

    echo -e "`date +%c` - WARN: $* \n"
}

error() {

    printf  "`date +%c` - ERROR: $*\n" 
    exit 1

}

chk_file () {

  if [ ! -f $1 ]; then
     error "Missing file: $1"
     exit 1
  fi

}

chk_dir () {

  if [ ! -d $1 ]; then
     error "Cant find directory: $1"
     return 1
  fi

}

h2d(){

  echo "ibase=16; $@"|bc

}

d2h(){

  echo "obase=16; $@"|bc

}

_vbox_nic_tabl () {

   if [ ! -f /usr/bin/VBoxManage ]; then
      error "Cant find VBoxManage command"
   fi

   vbox="/usr/bin/VBoxManage"

#   _tf=`mktemp /tmp/XXXXXX`
#   $vbox list vms |grep test_DN_ | awk '{print $1}' | sed -e 's/\"//g' > $_tf
#   echo "Found `wc -l $_tf | awk '{print $1}'` Etu Workers, extracting NIC info now"
#   
#   for i in `cat $_tf`
#   do 
#      $vbox showvminfo $i | grep "NIC 1"; 
#   done | \
#       awk -F'MAC:' '{print $2}' | awk -F',' '{print $1}' > $_tf.n1
#   
#   for i in `cat $_tf`
#   do 
#      $vbox showvminfo $i | grep "NIC 2" ; 
#   done | \
#        awk -F'MAC:' '{print $2}' | awk -F',' '{print $1}' > $_tf.n2
#   
#   paste $_tf $_tf.n1 $_tf.n2
#   
#    cleanup 
#   rm -f $_tf $_tf.n1 $_tf.n2

   # easier way
   local DN_name=test_DN_
   vm=(`$vbox list vms | grep $DN_name | awk '{print $1}' | sed -e 's/"//g'`)
   echo "Found ${#vm} Etu Workers, extracting NIC info now"

   echo -e "Hostname\tMAC Address 1\tMac Address 2"
   for i in ${vm[@]}
   do 
     mac=(`$vbox showvminfo $i | grep MAC | awk '{print $4}' | sed -e 's/\,//g' | sed -e 's/[0-9A-F]\{2\}/&:/g' -e 's/:$//'`)
     echo -e "$i\t${mac[0]}\t${mac[1]}"
   done
   
}

mac_refmt () {

  # convert mac address with comma delimiter
  sed -e 's/[0-9A-F]\{2\}/&:/g' -e 's/:$//'

}

load_var () {

  local etu_cfg="/opt/etu/etc/config.properties"
  if [ ! -f $etu_cfg ]; then
     error "Cant find Etu config properties"
     exit 1
  fi
  source $etu_cfg
  _master=$USER_HOST_NAME
  _master_ha=$USER_HOST_NAME_STANDBY_MASTER
  _master_fqdn=$USER_HOST_NAME.$USER_DOMAIN
  _dn=$USER_DOMAIN
  _krb_dn=`echo $USER_DOMAIN | tr [a-z] [A-Z]`
  etu_princ="etu/_HOST@$_krb_dn"

}

_get_worker () {

  load_var
  #info "Get all Etu worker host list"
  _th=(`grep $_dn /etc/hosts | awk '{print $(NF)}' | grep -v $_master | grep -v $_master_ha`)
  #info "Exclude offline workers from defined workers"
  let j=0
  for i in ${_th[@]}
  do
     $_ping $i >& /dev/null
     if [ $? != 0 ]; then
        #info "Removing $i from host list (offline or unreachable"
	unset _th[$j]
     fi
     let j+=1
  done
  echo ${_th[@]}

}

